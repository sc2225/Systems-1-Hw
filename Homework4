// Homework 4 Instructions:
Unzip file hw4.zip
$ unzip /home/lperko/public/hw4.zip
and move to newly created directory hw4:
$ cd hw4
This directory contains files hw4.c and Makefile. Open file hw4.c for editing and do the homework:
$ emacs hw4.c
When done, submit the homework as follows:
$ make submit

1.    Problem 3.60 in BO. You solution should be an implementation of C function loop(). Note that there is a mistake in the book in line 1 of page 313. The function signature should be long loop(long x, int n).
 From book:
 
 Consider the following assembly code:
      long loop (long x, int n)
      x in %rdi, n in %esi

      loop:
          movl    %esi, %ecx    // x0 = n
          movl    $1,   %edx    //mask = 1 
          movl    $0,   %eax    // result = 0
          jmp     .L2

      .L3:
          movq    %rdi, %r8     x2 = x
          andq    %rdx, %r8     x2 = mask & x 
          orq     %r8,  %rax    result = result | x2 SAME AS: result = result | (mask & x)
          salq    %cl,  %rdx    mask << n 

      .L2:
          testq   %rdx, %rdx    // checks rdx&rdx 
          jne     .L3           // if not equal/not zero, jump to .L3 
          rep; ret
The preceding code was generated by compiling C code that had the following overall form: 
 long loop (long x, int n)
 {
      long result = ______;
      long mask;
      for (mask = ____; mask ____; mask = ____) {
          result |= ________;
       }
       return result;
  }
  
  Your task is to fill in the missing parts.
 
 // Solution:
 
 long loop(long x, int n) {
  long result = 0;
  long mask;
  for (mask = 1; mask != 0; mask = mask << n){
    result |= (x&mask);
  }
return result;
}


